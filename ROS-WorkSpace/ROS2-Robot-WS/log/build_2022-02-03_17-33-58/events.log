[0.000000] (-) TimerEvent: {}
[0.000336] (-) JobUnselected: {'identifier': 'astra_camera'}
[0.000357] (-) JobUnselected: {'identifier': 'robot'}
[0.000369] (-) JobUnselected: {'identifier': 'robot_sim'}
[0.000402] (-) JobUnselected: {'identifier': 'robot_sim_2'}
[0.000414] (-) JobUnselected: {'identifier': 'rplidar_ros2'}
[0.000427] (-) JobUnselected: {'identifier': 'teleop_twist_keyboard'}
[0.000439] (serial_test) JobQueued: {'identifier': 'serial_test', 'dependencies': OrderedDict()}
[0.001049] (serial_test) JobStarted: {'identifier': 'serial_test'}
[0.010683] (serial_test) JobProgress: {'identifier': 'serial_test', 'progress': 'cmake'}
[0.012336] (serial_test) JobProgress: {'identifier': 'serial_test', 'progress': 'build'}
[0.012379] (serial_test) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/build/serial_test', '--', '-j4', '-l4'], 'cwd': '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/build/serial_test', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'fzq614'), ('SSH_AGENT_PID', '1672'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/install/lib:/opt/ros/galactic/opt/yaml_cpp_vendor/lib:/opt/ros/galactic/opt/rviz_ogre_vendor/lib:/opt/ros/galactic/lib/x86_64-linux-gnu:/opt/ros/galactic/lib'), ('HOME', '/home/fzq614'), ('OLDPWD', '/home/fzq614'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1500'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/install'), ('ROS_DISTRO', 'galactic'), ('LOGNAME', 'fzq614'), ('JOURNAL_STREAM', '8:58135'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'fzq614'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/galactic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu:@/tmp/.ICE-unix/1707,unix/ubuntu:/tmp/.ICE-unix/1707'), ('INVOCATION_ID', '082eb5c616bc4b0cb35bf0b2c2453f6c'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/084a1afb_2a9e_46b7_bbf1_1988db2c29e6'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.106'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/install:/opt/ros/galactic'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/build/serial_test'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/build/teleop_twist_keyboard:/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/install/lib/python3.8/site-packages:/opt/ros/galactic/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/install:/opt/ros/galactic')]), 'shell': False}
[0.053966] (serial_test) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target serial_test\x1b[0m\n'}
[0.079256] (serial_test) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/serial_test.dir/src/serial_test.cpp.o\x1b[0m\n'}
[0.079434] (serial_test) StdoutLine: {'line': b'[ 66%] \x1b[32mBuilding CXX object CMakeFiles/serial_test.dir/src/serial_linux.cpp.o\x1b[0m\n'}
[0.100397] (-) TimerEvent: {}
[0.201091] (-) TimerEvent: {}
[0.301706] (-) TimerEvent: {}
[0.402445] (-) TimerEvent: {}
[0.503105] (-) TimerEvent: {}
[0.603754] (-) TimerEvent: {}
[0.704456] (-) TimerEvent: {}
[0.805145] (-) TimerEvent: {}
[0.905788] (-) TimerEvent: {}
[1.006556] (-) TimerEvent: {}
[1.107162] (-) TimerEvent: {}
[1.207850] (-) TimerEvent: {}
[1.308931] (-) TimerEvent: {}
[1.409681] (-) TimerEvent: {}
[1.510421] (-) TimerEvent: {}
[1.611018] (-) TimerEvent: {}
[1.631007] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.631202] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:21:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kany_type\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kisfdtype\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.631250] (serial_test) StderrLine: {'line': b'     void write_to_serial( const \x1b[01;31m\x1b[Kany_type\x1b[m\x1b[K data )\n'}
[1.631291] (serial_test) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.631330] (serial_test) StderrLine: {'line': b'                                 \x1b[32m\x1b[Kisfdtype\x1b[m\x1b[K\n'}
[1.631369] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:21:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[1.631413] (serial_test) StderrLine: {'line': b'     void write_to_serial( const any_type data \x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.631472] (serial_test) StderrLine: {'line': b'                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.631512] (serial_test) StderrLine: {'line': b'                                                \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.634323] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:15:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kany_type\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kisfdtype\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.636091] (serial_test) StderrLine: {'line': b' void Serial::write_to_serial( const \x1b[01;31m\x1b[Kany_type\x1b[m\x1b[K data )\n'}
[1.636222] (serial_test) StderrLine: {'line': b'                                     \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.636316] (serial_test) StderrLine: {'line': b'                                     \x1b[32m\x1b[Kisfdtype\x1b[m\x1b[K\n'}
[1.636383] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Serial::write_to_serial(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.636565] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kbuffer(const int&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.636668] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;31m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.636760] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.636840] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.638360] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.638437] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.638485] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.638524] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.638569] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.638609] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:908:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::mutable_buffers_1 boost::asio::buffer(const boost::asio::mutable_buffer&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.638650] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.638688] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.638726] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:908:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst boost::asio::mutable_buffer&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.638766] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:921:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::mutable_buffers_1 boost::asio::buffer(const boost::asio::mutable_buffer&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.638806] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const mutable_buffer& b,\n'}
[1.638850] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.638890] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:921:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[1.638929] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:938:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::const_buffers_1 boost::asio::buffer(const boost::asio::const_buffer&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.638988] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.639029] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.639071] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:938:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst boost::asio::const_buffer&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639109] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:951:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::const_buffers_1 boost::asio::buffer(const boost::asio::const_buffer&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639150] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const const_buffer& b,\n'}
[1.639187] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.639225] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:951:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[1.639264] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:967:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::mutable_buffers_1 boost::asio::buffer(void*, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639304] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(void* data,\n'}
[1.639343] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.639380] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:967:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[1.639419] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:977:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kboost::asio::const_buffers_1 boost::asio::buffer(const void*, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639480] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const void* data,\n'}
[1.639523] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.639563] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:977:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[1.639601] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:991:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(PodType (&)[N])\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639640] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(PodType (&data)[N]) BOOST_ASIO_NOEXCEPT\n'}
[1.639678] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.639716] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:991:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.639755] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[KPodType [N]\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.639799] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.639838] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.639876] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.639914] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.639969] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.640012] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.640086] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.640133] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.640172] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1004:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(PodType (&)[N], std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.640216] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(PodType (&data)[N],\n'}
[1.640256] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.640295] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1004:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.640361] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[KPodType [N]\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.640402] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.640509] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.640556] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.640609] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.640651] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.640691] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.640734] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.640773] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.640810] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1020:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const PodType (&)[N])\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.640852] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.640889] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.640938] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1020:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.640985] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst PodType [N]\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.641025] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.641065] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.641105] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.641144] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.641182] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.641221] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.641259] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.641298] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.641336] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1034:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const PodType (&)[N], std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.641374] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const PodType (&data)[N],\n'}
[1.641411] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.641489] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1034:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.641540] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst PodType [N]\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.641581] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.641621] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.641665] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.641703] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.641743] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.641782] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.641820] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.641858] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.641896] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1120:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(boost::array<PodType, N>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.641947] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.641990] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.642030] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1120:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.642072] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kboost::array<PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.642113] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.642152] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.642191] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.642230] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.642267] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.642306] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.642344] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.642382] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.642422] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1135:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(boost::array<PodType, N>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.642478] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(boost::array<PodType, N>& data,\n'}
[1.642519] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.642558] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1135:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.642601] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kboost::array<PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.642640] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.642679] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.642717] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.642755] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.642793] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.642832] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.642870] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.642908] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.642958] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1151:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(boost::array<const PodType, N>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.643008] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.643049] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.643087] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1151:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.643125] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kboost::array<const PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.643164] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.643202] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.643240] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.643278] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.643316] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.643354] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.643392] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.643428] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.643487] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1165:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(boost::array<const PodType, N>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.643539] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(boost::array<const PodType, N>& data,\n'}
[1.643578] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.643617] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1165:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.643655] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kboost::array<const PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.643695] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.643732] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.643770] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.643807] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.643845] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.643882] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.643923] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.643977] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.644019] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1183:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const boost::array<PodType, N>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.644058] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.644097] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.644135] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1183:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.644172] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst boost::array<PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.644215] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.644253] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.644294] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.644331] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.644368] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.644406] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.644451] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.644574] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.644627] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1197:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const boost::array<PodType, N>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.644666] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const boost::array<PodType, N>& data,\n'}
[1.644705] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.644743] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1197:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.644782] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst boost::array<PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.644824] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.644875] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.644913] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.644970] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.645011] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.645050] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.645088] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.645125] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.645163] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1215:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(std::array<_Tp, _Nm>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.645322] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.645421] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.645531] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1215:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.645629] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::array<_Tp, _Nm>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.645670] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.645709] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.645748] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.645785] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.645824] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.645863] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.645901] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.645953] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.646001] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1229:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::mutable_buffers_1 boost::asio::buffer(std::array<_Tp, _Nm>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646041] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(std::array<PodType, N>& data,\n'}
[1.646080] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.646120] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1229:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.646162] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::array<_Tp, _Nm>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646201] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.646239] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.646277] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.646314] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.646351] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.646389] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.646430] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.646486] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.646527] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(std::array<const PodType, N>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646568] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.646609] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.646647] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1245:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.646686] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::array<const PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.646727] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.646766] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.646804] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.646841] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.646878] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.646917] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.646965] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.647041] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.647086] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1259:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(std::array<const PodType, N>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.647129] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(std::array<const PodType, N>& data,\n'}
[1.647166] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.647204] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1259:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.647243] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::array<const PodType, N>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.647288] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.647327] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.647364] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.647403] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.647439] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.647493] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.647533] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.647571] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.647609] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1275:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const std::array<_Tp, _Nm>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.647647] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.647685] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.647722] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1275:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.647760] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::array<_Tp, _Nm>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.647802] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.647841] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.647879] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.647916] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.647962] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.648007] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.648048] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.648088] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.648131] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1289:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, long unsigned int N> boost::asio::const_buffers_1 boost::asio::buffer(const std::array<_Tp, _Nm>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.648173] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(const std::array<PodType, N>& data,\n'}
[1.648211] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.648248] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1289:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.648287] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::array<_Tp, _Nm>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.648326] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.648363] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.648400] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.648439] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.648557] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.648616] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.648661] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.648700] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.648739] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1310:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, class Allocator> boost::asio::mutable_buffers_1 boost::asio::buffer(std::vector<_Tp, _Alloc>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.648778] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.648816] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.648854] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1310:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.648891] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_Tp, _Alloc>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.648931] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.648987] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.649028] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.649067] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.649109] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.649148] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.649186] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.649224] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.649262] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1334:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, class Allocator> boost::asio::mutable_buffers_1 boost::asio::buffer(std::vector<_Tp, _Alloc>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.649300] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(std::vector<PodType, Allocator>& data,\n'}
[1.649338] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.649375] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1334:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.649413] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<_Tp, _Alloc>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.649466] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.649512] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.649556] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.649595] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.649634] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.649678] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.649724] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.649763] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.649809] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1359:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, class Allocator> boost::asio::const_buffers_1 boost::asio::buffer(const std::vector<_Tp, _Alloc>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.649847] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.649885] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.649925] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1359:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.649998] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<_Tp, _Alloc>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.650064] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.650151] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.650502] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.650555] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.650598] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.650636] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.650674] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.650712] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.650751] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1383:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class PodType, class Allocator> boost::asio::const_buffers_1 boost::asio::buffer(const std::vector<_Tp, _Alloc>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.650790] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.650828] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.650865] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1383:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.650904] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<_Tp, _Alloc>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.650968] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.651035] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.651077] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.651118] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.651160] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.651200] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.651256] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.651295] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.651339] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1407:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits, class Allocator> boost::asio::mutable_buffers_1 boost::asio::buffer(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.651382] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.651423] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.651477] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1407:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.651518] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<_CharT, _Traits, _Allocator>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.651557] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.651594] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.651632] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.651673] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.651712] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.651750] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.651788] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.651826] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.651863] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1431:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits, class Allocator> boost::asio::mutable_buffers_1 boost::asio::buffer(std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.651902] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_MUTABLE_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.651938] (serial_test) StderrLine: {'line': b'                                  \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.651993] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1431:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.652035] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::__cxx11::basic_string<_CharT, _Traits, _Allocator>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.652075] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.652117] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.652155] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.652194] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.652231] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.652269] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.652307] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.652345] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.652383] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1454:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits, class Allocator> boost::asio::const_buffers_1 boost::asio::buffer(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.652423] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.652471] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.652581] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1454:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.652628] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Allocator>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.652668] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.652707] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.652749] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.652787] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.652824] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.652865] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.652903] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.652939] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.652993] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1477:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits, class Allocator> boost::asio::const_buffers_1 boost::asio::buffer(const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.653056] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.653097] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.653135] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1477:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.653178] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Allocator>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kconst int\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.653220] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.653257] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.653294] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.653333] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.653371] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.653409] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.653446] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.653500] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.653541] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1501:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits> boost::asio::const_buffers_1 boost::asio::buffer(std::basic_string_view<_CharT, _Traits>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.653581] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.653619] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.653656] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1501:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.653693] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::basic_string_view<_CharT, _Traits>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.653732] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.653770] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.653808] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/asio/detail/reactive_socket_service.hpp:22\x1b[m\x1b[K,\n'}
[1.653845] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_socket.hpp:36\x1b[m\x1b[K,\n'}
[1.653884] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio/basic_datagram_socket.hpp:20\x1b[m\x1b[K,\n'}
[1.653926] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/asio.hpp:24\x1b[m\x1b[K,\n'}
[1.653973] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:5\x1b[m\x1b[K,\n'}
[1.654019] (serial_test) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:1\x1b[m\x1b[K:\n'}
[1.654059] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1522:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class Elem, class Traits> boost::asio::const_buffers_1 boost::asio::buffer(std::basic_string_view<_CharT, _Traits>, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.654099] (serial_test) StderrLine: {'line': b' inline BOOST_ASIO_CONST_BUFFER \x1b[01;36m\x1b[Kbuffer\x1b[m\x1b[K(\n'}
[1.654141] (serial_test) StderrLine: {'line': b'                                \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[1.654179] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/asio/buffer.hpp:1522:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.654218] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:84:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kstd::basic_string_view<_CharT, _Traits>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.654261] (serial_test) StderrLine: {'line': b'     size_t len = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data \x1b[01;36m\x1b[K)\x1b[m\x1b[K, error_code_ );\n'}
[1.654300] (serial_test) StderrLine: {'line': b'                                                                                    \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.654338] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:17:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Klen\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[1.654378] (serial_test) StderrLine: {'line': b'     size_t \x1b[01;35m\x1b[Klen\x1b[m\x1b[K = boost::asio::write(*serial_port_.get(), boost::asio::buffer( data ), error_code_ );\n'}
[1.654415] (serial_test) StderrLine: {'line': b'            \x1b[01;35m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.654453] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Serial::SerialInit(std::__cxx11::string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.654507] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:38:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid conversion from \xe2\x80\x98\x1b[01m\x1b[Kconst char*\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.654547] (serial_test) StderrLine: {'line': b'         Serial::write_to_serial(\x1b[01;31m\x1b[K"Hello world"\x1b[m\x1b[K );\n'}
[1.654585] (serial_test) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.654623] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.cpp:15:46:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kvoid Serial::write_to_serial(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.654661] (serial_test) StderrLine: {'line': b' void Serial::write_to_serial( \x1b[01;36m\x1b[Kconst any_type data\x1b[m\x1b[K )\n'}
[1.654702] (serial_test) StderrLine: {'line': b'                               \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~^~~~\x1b[m\x1b[K\n'}
[1.654740] (serial_test) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_test.cpp:2\x1b[m\x1b[K:\n'}
[1.654778] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:21:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kany_type\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[Kisfdtype\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.654816] (serial_test) StderrLine: {'line': b'     void write_to_serial( const \x1b[01;31m\x1b[Kany_type\x1b[m\x1b[K data )\n'}
[1.654854] (serial_test) StderrLine: {'line': b'                                 \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.654891] (serial_test) StderrLine: {'line': b'                                 \x1b[32m\x1b[Kisfdtype\x1b[m\x1b[K\n'}
[1.654928] (serial_test) StderrLine: {'line': b'\x1b[01m\x1b[K/home/fzq614/My_ROS_Robot/ROS-WorkSpace/ROS2-Robot-WS/src/serial_test/src/serial_linux.hpp:21:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[1.654976] (serial_test) StderrLine: {'line': b'     void write_to_serial( const any_type data \x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[1.655034] (serial_test) StderrLine: {'line': b'                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.655074] (serial_test) StderrLine: {'line': b'                                                \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.711738] (-) TimerEvent: {}
[1.812461] (-) TimerEvent: {}
[1.913154] (-) TimerEvent: {}
[2.013731] (-) TimerEvent: {}
[2.099541] (serial_test) StderrLine: {'line': b'make[2]: *** [CMakeFiles/serial_test.dir/build.make:76: CMakeFiles/serial_test.dir/src/serial_linux.cpp.o] Error 1\n'}
[2.099721] (serial_test) StderrLine: {'line': b'make[2]: *** Waiting for unfinished jobs....\n'}
[2.114008] (-) TimerEvent: {}
[2.116116] (serial_test) StderrLine: {'line': b'make[2]: *** [CMakeFiles/serial_test.dir/build.make:63: CMakeFiles/serial_test.dir/src/serial_test.cpp.o] Error 1\n'}
[2.116719] (serial_test) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/serial_test.dir/all] Error 2\n'}
[2.116846] (serial_test) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[2.120039] (serial_test) CommandEnded: {'returncode': 2}
[2.161701] (serial_test) JobEnded: {'identifier': 'serial_test', 'rc': 2}
[2.172446] (-) EventReactorShutdown: {}
